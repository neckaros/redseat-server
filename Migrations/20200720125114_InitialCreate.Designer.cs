// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using redseat_server.Models;

namespace redseat_server.Migrations
{
    [DbContext(typeof(RedseatDbContext))]
    [Migration("20200720125114_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-preview.6.20312.4");

            modelBuilder.Entity("redseat_server.Models.Download", b =>
                {
                    b.Property<int>("DownloadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DownloadStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DownloaderId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DownloaderId1")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Progress")
                        .HasColumnType("REAL");

                    b.HasKey("DownloadId");

                    b.HasIndex("DownloaderId1");

                    b.ToTable("Downloads");
                });

            modelBuilder.Entity("redseat_server.Models.Downloader", b =>
                {
                    b.Property<int>("DownloaderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DownloaderType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.Property<string>("token")
                        .HasColumnType("TEXT");

                    b.HasKey("DownloaderId");

                    b.ToTable("Downloaders");
                });

            modelBuilder.Entity("redseat_server.Models.Download", b =>
                {
                    b.HasOne("redseat_server.Models.Downloader", "Downloader")
                        .WithMany("Downloads")
                        .HasForeignKey("DownloaderId1");
                });
#pragma warning restore 612, 618
        }
    }
}
